plugins {
    id 'groovy'
    id 'java'
    id 'maven-publish'
    id 'java-gradle-plugin'

}

group 'com.wt.test'
version '1.0.0-SNAPSHOT'

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

ext {
    sourceCompatibility = 11
    jarArchiveClassifier = ''
    sourceJarArchiveClassifier = 'sources'
    docJarArchiveClassifier = 'javadoc'
}

jar {
    archiveClassifier = rootProject.ext.jarArchiveClassifier
}

//打包sourcesJar任务
task sourceJar(type: Jar, dependsOn: classes) {
    archiveClassifier = rootProject.ext.sourceJarArchiveClassifier
    from sourceSets.main.allSource
}
// 打包javadocJar任务
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = rootProject.ext.docJarArchiveClassifier
    from javadoc.destinationDir
}
// 解决javadoc打包乱码
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        title "文档大标题"
    }
}

//https://docs.gradle.org/7.3/userguide/publishing_maven.html#publishing_maven:resolved_dependencies
//In the example above, Gradle will use the versions resolved on the runtimeClasspath for dependencies declared in api,
//which are mapped to the compile scope of Maven. Gradle will also use the versions resolved on the runtimeClasspath for dependencies declared in implementation,
//which are mapped to the runtime scope of Maven. fromResolutionResult() indicates that Gradle should use the default classpath of a variant and runtimeClasspath is the default classpath of java-runtime.

allprojects {

    repositories {
        mavenLocal()
        maven { name "Alibaba"; url "https://maven.aliyun.com/repository/public" }
        mavenCentral()
    }

    buildscript {
        repositories {
            mavenLocal()
            maven { name "Alibaba"; url 'https://maven.aliyun.com/repository/public' }
            mavenCentral()
        }
        dependencies {
            classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        }
    }

    publishing {
        publications {
            mavenLocal(MavenPublication) {
                group 'com.wt.test'
                artifactId 'gradle-springboot-plugin'
                version '1.0.0-SNAPSHOT'
                from components.java

                // 增加 sourcesJar、javadocJar 任务
                artifact sourceJar
                artifact javadocJar
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }

            }
        }
    }
}
